buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.30.0"
    }
}
apply plugin: "maven-publish"
apply plugin: 'signing'
apply plugin: 'io.codearte.nexus-staging'

nexusStaging {
    serverUrl = "https://s01.oss.sonatype.org/service/local/"
    packageGroup = GROUP
    stagingProfileId = "4b37cee1803959"
}

def getReleaseRepositoryUrl() {
    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
            : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
}

def getRepositoryUsername() {
    return hasProperty('nexusUsername') ? nexusUsername : ""
}

def getRepositoryPassword() {
    return hasProperty('nexusPassword') ? nexusPassword : ""
}

def configurePom(pom) {
    pom.name = POM_NAME
    pom.packaging = POM_PACKAGING
    pom.description = POM_DESCRIPTION
    pom.url = POM_URL

    pom.scm {
        url = POM_SCM_URL
        connection = POM_SCM_CONNECTION
        developerConnection = POM_SCM_DEV_CONNECTION
    }

    pom.licenses {
        license {
            name = POM_LICENCE_NAME
            url = POM_LICENCE_URL
            distribution = POM_LICENCE_DIST
        }
    }

    pom.developers {
        developer {
            id = POM_DEVELOPER_ID
            name = POM_DEVELOPER_NAME
        }
    }
}

publishing {
    repositories {
        maven {
            url getReleaseRepositoryUrl()
            credentials(PasswordCredentials) {
                username = getRepositoryUsername()
                password = getRepositoryPassword()
            }
        }
    }
    publications {
        maven(MavenPublication) {
            groupId = GROUP
            artifactId = POM_ARTIFACT_ID
            version = VERSION_NAME
            artifact ("libwebrtc.aar")
            artifact ("deploy/sources.jar") {
                classifier 'sources'
            }
            artifact ("deploy/javadoc.jar") {
                classifier 'javadoc'
            }
            configurePom(pom)
        }
    }

    signing {
        publishing.publications.all { publication ->
            sign publication
        }
    }
}